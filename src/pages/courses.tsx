import Head from 'next/head'
import { BsPlus } from 'react-icons/bs'
import { useAuth } from '../contexts/auth'
import { useEffect, useState } from 'react'
import { coursesColumnData } from '../types/coursesColumnData'
import { toast } from 'react-hot-toast'
import { Table } from '../components/Courses/Table'
import { getCourses } from '../services/db/courses/getCourses'
import { Modal } from '../components/Courses/Modal'
import { addCourse } from '../services/db/courses/addCourse'
import { updateCourse } from '../services/db/courses/updateCourse'

export default function Courses() {
    //? contexts
    const { user, loading }: any = useAuth()

    //? states
    const [isDataFetching, setIsDataFetching] = useState<boolean>(false)
    const [showAddCourseModal, setShowAddCourseModal] = useState<boolean>(false)
    const [showUpdateCourseModal, setShowUpdateCourseModal] =
        useState<boolean>(false)
    const [selectedCourse, setSelectedCourse] = useState<any>(null)
    const [courses, setCourses] = useState<coursesColumnData[]>([])

    //? functions
    const refetchCourses = () => {
        setIsDataFetching(true)
        getCourses().then((res) => {
            setCourses(res)
            setIsDataFetching(false)
        })
    }

    //? effects
    useEffect(() => {
        setIsDataFetching(true)
        getCourses().then((res) => {
            setCourses(res)
            setIsDataFetching(false)
        })
    }, [])

    useEffect(() => {
        if (selectedCourse) setShowUpdateCourseModal(true)
        else setShowUpdateCourseModal(false)
    }, [selectedCourse])

    return (
        <div className={`w-full bg-white flex flex-col`}>
            {user && (
                <Modal
                    header="Add New Course"
                    actionButtonText="Add Course"
                    actionFunction={addCourse}
                    refetch={refetchCourses}
                    showModal={showAddCourseModal}
                    setShowModal={setShowAddCourseModal}
                />
            )}
            {selectedCourse && (
                <Modal
                    header="Update Course"
                    actionButtonText="Update Course"
                    isUpdateModal={true}
                    selectedEntity={selectedCourse}
                    actionFunction={updateCourse}
                    refetch={refetchCourses}
                    showModal={showUpdateCourseModal}
                    setShowModal={setShowUpdateCourseModal}
                />
            )}
            <Head>
                <title>Courses</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <meta
                    name="viewport"
                    content="width=device-width, initial-scale=1"
                />
                <link
                    rel="icon"
                    href="/favicon.ico"
                />
            </Head>
            <div className="grid grid-cols-5 gap-0 justify-center py-48 px-5 md:px-14 space-y-8 min-h-screen">
                <div className="col-span-5 flex flex-row items-center justify-between">
                    <h3 className="font-bold text-xl md:text-3xl">Courses</h3>
                    <button
                        disabled={loading}
                        onClick={() => {
                            if (user) setShowAddCourseModal(true)
                            else
                                toast('Please login to add new course', {
                                    icon: 'ℹ️',
                                })
                        }}
                        type="button"
                        className="flex items-center space-x-2 px-2 py-1 duration-200 transition-all rounded-md shadow-md hover:shadow-xl bg-primary text-white font-semibold disabled:bg-primary/70 disabled:cursor-wait"
                    >
                        <BsPlus className="h-8 w-8" />
                        <span className="">Add Course</span>
                    </button>
                </div>
                <div className="col-span-5 flex h-fit w-full">
                    <Table
                        courses={courses}
                        refetchCourses={refetchCourses}
                        setSelectedCourse={setSelectedCourse}
                        isDataFetching={isDataFetching}
                    />
                </div>
            </div>
        </div>
    )
}
